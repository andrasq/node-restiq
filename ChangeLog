0.9.1
- fix res.send() to set res._body to raw object, and set res.headers
- fix res.json() to set _body

0.9.0
- process requests async for a large bump in throughput

0.8.1
- fix 0 'use' steps before the mapped route
- make removeRoute accept routes from both mapRoute() and addRoute()

0.8.0
- fix restiq.error.Error* to construct proper Errors
- refactor middleware runner to always call the _finally steps

0.7.6
- restify compat: emit 'uncaughtException' on unhandled mw error
- restify compat: experimental restiq.InvalidCredentialsError

0.7.5
- check that the middleware error.code is a plausible 3 digit http status before using it
- upgrade to qhttp-0.6.0
- document setErrorHandler
- let addStep(func, where) accept its args in either order

0.7.4
- apply restify emulation before the route is mapped, to have res.send available in unit tests

0.7.3
- only set the restify error handler once at start, to allow caller to override
- restify compat: not a restify error if parseBody cannot decode body (with mapParams:false)
- fix parseBody to set to decoded if it decodes to falsy

0.7.2
- add to ci and coverage tests
- test with qnit 0.15.1 with fixed failure exitcode
- fix typo in makeError source string
- use newer qmock
- update dependencies (no need for qmock, yes for querystring)
- guard against possible null deref in rlib

0.7.1
- faster readBody() data chunk concatenation
- list qmock as a dependency (been one since 2015)
- fix: always return a Buffer in readBinary mode
- fix: parseAuthorization mw should run ok without a callback

0.7.0
- middleware builder functions
- maxBodySize readBody and parseReadBodyParams option

0.6.3
- restify compat: provide res._body
- restify compat: suppress errors from `after`
- run tests with qnit
- upgrade aflow to 0.10.1 for speedup

0.6.2
- fix potential null deref on unmapped routes
- new .gitignore
- fix and clean up Readme, thanks @fidian!

0.6.1
- add req.path() compat method
- tolerate double-close
- read request as 'utf8' to not split multi-byte chars

0.6.0
- bump to aflow 0.9.3 (unit tests, track latest)
- bump to qhttp 0.0.6 (track latest)
- fix Restiq.listen() callback to only call once started
- remove qhttp sources
- make Restiq() build apps like express() does

0.5.3
- move http-client into the qhttp package
- change arlib dependency to qhttp

0.5.2
- split http-client out of test-restiq

0.5.1
- speedup: improve readBody readBinary codepath, redo timings

0.5.0
- app.removeRoute method
- [options] param to addRoute (for later)
- refactor app routers into a struct

0.4.3
- bugfix: decodeBody should not change req.body if cannot decode
- compat: make decodeQueryParams populate req.query as well as req.params
- bugfix: propagate errors from parseBody()

0.4.2
- switch to querystring.encode() for now for compatible flat array encodings
- bump to arlib 0.2.4 to pick up http_parse_query fixes
- revert slower array-of-chunks readBinary, toString("binary") converts into utf8 as if latin1

0.4.1
- 20k/s
- default to readImmediate:0
- restify compat default to readImmediate:2, readBinary:true

0.4.0
- acceptParser() restify helper
- fix error classes
- urldecode route params

0.3.0
- deprecate after() and finally()
- tune read loop

0.2.1
- 21.5k/s
- bugfix: write per-instance req.params not global
- speedup: cache route mw stack
- bodyParser(), authParser() restify helpers
- fix encoders, decoders
- bugfix: accepts()
- bugfix: _bodyEof hang at end of call
- bugfix: restify compat error handling
- setNoDelay option
- speedups
- expose createServer
- mw.closeResponse()
- add 'setup' chain
- fix #search query string parsing
- fix 'finally' steps

0.1.0
- improve restify compat (response handling)
- speedup: faster run stack
- fix body param decoding
- fix route matching edge case
- improve error handling
- use() stack

0.0.1
- 17k/s
- basics working
