0.6.0-pre
- bump to aflow 0.9.3 (unit tests, track latest)
- bump to qhttp 0.0.6 (track latest)
- fix Restiq.listen() callback to only call once started
- remove qhttp sources

0.5.3
- move http-client into the qhttp package
- change arlib dependency to qhttp

0.5.2
- split http-client out of test-restiq

0.5.1
- speedup: improve readBody readBinary codepath, redo timings

0.5.0
- app.removeRoute method
- [options] param to addRoute (for later)
- refactor app routers into a struct

0.4.3
- bugfix: decodeBody should not change req.body if cannot decode
- compat: make decodeQueryParams populate req.query as well as req.params
- bugfix: propagate errors from parseBody()

0.4.2
- switch to querystring.encode() for now for compatible flat array encodings
- bump to arlib 0.2.4 to pick up http_parse_query fixes
- revert slower array-of-chunks readBinary, toString("binary") converts into utf8 as if latin1

0.4.1
- 20k/s
- default to readImmediate:0
- restify compat default to readImmediate:2, readBinary:true

0.4.0
- acceptParser() restify helper
- fix error classes
- urldecode route params

0.3.0
- deprecate after() and finally()
- tune read loop

0.2.1
- 21.5k/s
- bugfix: write per-instance req.params not global
- speedup: cache route mw stack
- bodyParser(), authParser() restify helpers
- fix encoders, decoders
- bugfix: accepts()
- bugfix: _bodyEof hang at end of call
- bugfix: restify compat error handling
- setNoDelay option
- speedups
- expose createServer
- mw.closeResponse()
- add 'setup' chain
- fix #search query string parsing
- fix 'finally' steps

0.1.0
- improve restify compat (response handling)
- speedup: faster run stack
- fix body param decoding
- fix route matching edge case
- improve error handling
- use() stack

0.0.1
- 17k/s
- basics working
